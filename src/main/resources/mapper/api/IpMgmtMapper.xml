<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="z.note.lite.mapper.api.IpMgmtMapper">
    <sql id="pageableWhereClause">
        <where>
            <if test="ip != null">
                and ip=#{ip}::inet
            </if>
        </where>
    </sql>

    <select id="findAll" resultType="z.note.lite.entity.Ip">
        select id, ip::text, country, region, city, isp, country_id, region_id, city_id, isp_id, create_ts
        from ip_pool
        <include refid="pageableWhereClause" />
        order by id desc limit #{size} offset #{offset}
    </select>

    <select id="count" resultType="java.lang.Long">
        SELECT count(*) FROM ip_pool
        <include refid="pageableWhereClause" />
    </select>

    <select id="findByIp" resultType="z.note.lite.entity.Ip">
        select id, concat(country, region, city, isp) as address from ip_pool where ip = #{ip}::inet limit 1
    </select>

    <select id="insertWithIp" resultType="integer">
        insert into ip_pool(ip) values(#{ip}) returning id
    </select>

    <select id="update" resultType="z.note.lite.entity.Ip">
        update ip_pool
        set
            country = #{country},
            region = #{region},
            city = #{city},
            isp = #{isp},
            country_id = #{countryId},
            region_id = #{regionId},
            city_id = #{cityId},
            isp_id = #{ispId},
            update_ts = current_timestamp
        where
            id=#{id}
        returning id, concat(country, region, city, isp) as address
    </select>

    <select id="insert" resultType="z.note.lite.entity.Ip">
        insert into ip_pool(ip, country, region, city, isp, country_id, region_id, city_id, isp_id)
        values(#{ip}::inet, #{country}, #{region}, #{city}, #{isp}, #{countryId}, #{regionId}, #{cityId}, #{ispId})
        returning id, concat(country, region, city, isp) as address
    </select>

</mapper>
